# Monitoring-Next

## Stack Architecture

    [ROUTER] =(JSON)=> [API-in] => [DATABASE] => [API-out] =(JSON)=> [WEBAPP]
                                   [DATABASE] => [API-out] =(JSON)=> [ALERTS]
                                   [DATABASE] => [API-out] =(JSON)=> [REPORT]

## Stack Component Options

### [DATABASE]

see [JSON/Serve](JSON#servestore)

- <http://graphite.wikidot.com/high-level-diagram>
- <https://github.com/etsy/statsd>

# Special Info

(info regarding the Idea to use CouchDB as Backend/DB/API)

- [blog post by someone who did it (2010)](http://jamietalbot.com/2010/02/16/couchdb-for-a-real-time-monitoring-system/)


# General Info

- [wiki list](http://en.wikipedia.org/wiki/Comparison_of_network_monitoring_systems)
- [short list from opscode wiki](http://wiki.opscode.com/display/chef/Monitoring+Sucks)
- [talk from opscode](http://www.youtube.com/watch?v=BXxtdE-Paco)
- [rackspace: monitoring for chef](http://www.rackspace.com/knowledge_center/article/cloud-monitoring-automation-integrate-monitoring-with-chef)
- [slides on puppet+nagios](http://www.slideshare.net/ChristianMague/automating-monitoring-with-puppet)
- [SE: alternatives to nagios](http://serverfault.com/questions/83963/alternatives-to-nagios)


# Common Tools

- [nagios](http://www.nagios.org)
- [icinga: nice nagios fork](https://www.icinga.org)
- [shinken: nice nagios rewrite](http://www.shinken-monitoring.org)