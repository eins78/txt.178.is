# Monitoring-Next

## Idea 1: CouchDB

- [20min Screencast about CouchApps](http://vimeo.com/26147136)

- CouchDB as Backend for DB and API (json-over-http)
- View: web app served from CouchDB (["CouchApp"](http://couchapp.org/page/what-is-couchapp))
- CouchDB == NoSQL: no schema (good!), but no filtered queries (bad!)

- Flexible Segmentation:
    - There can be multiple Databases! 
    - Inside a DB can be multiple CouchApps!

    [ROUTER] =(JSON)=> [API-in] => [DATABASE] => [API-out] =(JSON)=> [WEBAPP]
                                   [DATABASE] => [API-out] =(JSON)=> [ALERTS]
                                   [DATABASE] => [API-out] =(JSON)=> [REPORT]
                                   

### v2: distribution, performance

a more complicated setup is possible, using multiple distributed DBs (per-installation).

- couchdb can replicate (sync) in clever ways
- local (server) installation = local web interface possible
- for better performance of public interface redis or a traditional DB might be used along with costum code (but caching might be enough).

    [ROUTER] =[API]=> [DATABASE.local] =[API]=> [WEBAPP.local?]
                          ↑ sync ↓
                      [DATABASE.global] =[API]=> [WEBAPP.global]
                          ↑ sync ↓
                       [Redis or *SQL] =[Costum Code]=> [WEBAPP.public]

### Special Info

(info regarding the Idea to use CouchDB as Backend/DB/API)

- [blog post by someone who did it (2010)](http://jamietalbot.com/2010/02/16/couchdb-for-a-real-time-monitoring-system/)
- [Reclinejs - relax with couchdb](http://reclinejs.com)

see also: [JSON](JSON#servestore)

### More stuff

- [nervous: nodejs monitoring framework](https://github.com/gflarity/nervous)
- [response: nodejs monitoring framework](https://github.com/gflarity/response)
## Other Options

- [StatsD](https://github.com/etsy/statsd)
- [Graphite](http://graphite.wikidot.com/high-level-diagram)


# General Info

- [wiki list](http://en.wikipedia.org/wiki/Comparison_of_network_monitoring_systems)
- [short list from opscode wiki](http://wiki.opscode.com/display/chef/Monitoring+Sucks)
- [talk from opscode](http://www.youtube.com/watch?v=BXxtdE-Paco)
- [rackspace: monitoring for chef](http://www.rackspace.com/knowledge_center/article/cloud-monitoring-automation-integrate-monitoring-with-chef)
- [slides on puppet+nagios](http://www.slideshare.net/ChristianMague/automating-monitoring-with-puppet)
- [SE: alternatives to nagios](http://serverfault.com/questions/83963/alternatives-to-nagios)


# Common Tools

- [nagios](http://www.nagios.org)
- [icinga: nice nagios fork](https://www.icinga.org)
- [shinken: nice nagios rewrite](http://www.shinken-monitoring.org)

## Commercial

- [splunk](http://www.splunk.com)
- [loggly: Logging as a service](http://www.loggly.com)
- [papertrail: Logging as a service](https://papertrailapp.com)
