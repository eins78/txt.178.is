# (Short) History of the Internet
## Idea:
 - decentral network (for stability, security)
 - no need for central point of service (and failure)
 - every computer can reach every other computer

# *1969--1990*: (D)ARPAnet - military und universities
### DARPA: *Defense* Advanced Research Projects Agency

## Features:
  - Log in to and **work on remote computers** (telnet, now SSH)
    - was the only way to do serious stuff before the PC (**Personal** Computer)
  - **File "Sharing"**, i.e. sending and receiving (FTP: File Transfer Protocol)
  - **Communication** (E-Mail, Usenet)

# *1982*: **TCP/IP**: Transmission Control Protocol/Internet Protocol  
## defines how data is transmitted and where  
 - **IP**: every computer has an Internet protocol (IP) address (141.54.1.3, 178.77.78.244)
 - **TCP**: data is split up into packets and sent around from node to node (*routed*) till they reach their destination
 - 500+ more protocolls at work, but these are the basics…  

# Pic: 30% of the internet in 2005  
![Picture](http://upload.wikimedia.org/wikipedia/commons/d/d2/Internet_map_1024.jpg)

# 1990: Internet opens for everyone, not just educational and military institutions

# 1991: Tim Berners-Lee invents the World Wide Web and [announces it in usenet](http://groups.google.com/group/alt.hypertext/msg/395f282a67a1916c?dmode=source)

# Usenet Post:
~~~~{.bash}
Path: gmdzi!unido!mcsun!cernvax!info
From: timbl@info .cern.ch (Tim Berners-Lee)
Newsgroups: alt.hypertext
Subject: WorldWideWeb: Summary
Keywords: heterogeneous hypertext, web, source, protocol, index, information retrieval
Message-ID: <6487@cernvax.cern.ch>
Date: 6 Aug 91 16:00:12 GMT
References: <6484@cernvax.cern.ch>
Sender: n...@cernvax.cern.ch
Lines: 84

In article <6...@cernvax.cern.ch> I promised to post a short summary  of the  
WorldWideWeb project.  Mail me with any queries.

		WorldWideWeb - Executive Summary


The WWW project merges the techniques of information retrieval and hypertext to  
make an easy but powerful global information system.

The project started with the philosophy that much academic information should  
be freely available to anyone. It aims to allow information sharing within  
internationally dispersed teams, and the dissemination of information by  
support groups.

     Reader view

The WWW world consists of documents, and links.  Indexes are special documents  
which, rather than being read, may be searched. The result of such a search is  
another ("virtual") document containing links to the documents found.  A simple  
protocol ("HTTP") is used to allow a browser program to request a keyword  
search by a remote information server. 

The web contains documents in many formats. Those documents which are  
hypertext,  (real or virtual) contain links to other documents, or places  
within documents. All documents, whether real, virtual or indexes, look similar  
to the reader and are contained within the same addressing scheme.

To follow a link,  a reader clicks with a mouse (or types in a number if he or  
she has no mouse). To search and index, a reader gives keywords (or other  
search criteria). These are the only operations  necessary to access the entire  
world of data.
~~~~

# WWW: the idea
 - HyperText == Formatted Text with _Links_
 - everybody can publish and serve content from his desk
 - The first web **server**  
![The first web **server**](http://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/CERN_NEXT_Server_2010-07-01.jpg/800px-CERN_NEXT_Server_2010-07-01.jpg)

# Human Absurdity, interconnected: The Net Problems

- a.k.a. "This sounds nice, then WTF is shit so complicated?" 

- ![](http://imgs.xkcd.com/comics/file_transfer.png)

- > "Every time you email a file to yourself so you can pull it up on your friend's laptop, Tim Berners-Lee sheds a single tear."

# Problem #1. Asymmetric Connections  (DSL=**A**DSL)

- the "Geburtsfehler" (birth defect) of the private internet

### Example: DSL16000 = 16 Mbps (=~30€)
 - Down: 13,06 Mbps; Up: 0,96 Mbps
 - = 1,63 MB/s down und 0,12MB/s up
 - i.e.: *download* 1GB in 10min, *upload* 1GB in 2h20min


# Problem #2. Address Shortage

- not enough IP(v4) addresses for everyone (1.1.1.1--255.255.255.254 = 4.3 billion addresses ), so:
 - **dynamics IPs**: with every connect you get a new address
 - **NAT**: every household only gets one IP, so every computer sitting "behind" the modem/router has to share that address. this only works well for connections to servers (computers with real IPs), but a connection between 2 computers in different households are complicated to set up.

# Long-term solution: IPv6
 - 3.4×10^38 Adressen = 	340.000.000.000.000.000.000.000.000.000.000.000.000 = 340 undecillion = [340 billion billion billion billion](http://www.wolframalpha.com/input/?i=340000000000000000000000000000000000000)
 - this is a standard since 1998(!), but almost none of the big internet providers acted (till now, because now IPv4 is really exhausted)

# That means:
Alice and Bob, both sitting at their PCs at home can't just connect to each other. they have to find out their [current IPs](http://ifconfig.me) and tell them to each other. they also have to configure their modem/router correctly and even if they are able to do that, the connection still is slow as hell.

# The absurdity

- we have a global and decentral network.
- to make use of it, private consumers need centralized services.

# Examples
- GMail/Web.de & Co. *instead of* own mail server 
 - (Bin Laden had Yahoo!Mail)
- Facebook, Flickr, Soundcloud, Blogspot, etc *instead of* own WWW Server
- Skype *instead of* SIP/Jabber (Skype=lawful interception)
- Kino.to/Dropbox/etc *instead of* ftp://max.server/Filme/V.for.Vendetta.avi
- Rapidshare/MegaUpload/etc *instead of* Torrents

---

# Digital Collaboration

# 1. Communikation (internal/external)
 - sharing knowledge, results and findings
 - discussing, forming opinions, decisions
 - Classic: E-Mail, E-Mail-Lists
 - Also: Forums, FB-Groups, (private) Blogs, etc
 - *everything goes, as long as the message comes to the recipient*
 - since every media is now emerged in the net, one could rephrase McLuhan to: "the protocol is the message"

# 2. Files - shared access to work data
- **"Raw"**
 - via USB-Stick, (dumb) network share, Dropbox, 1-click-file-hosts (Rapidshare etc)
 - via E-Mail (bad! don't!)

# General Problem: 
- **Who** has edited **what**, **when** (and **why**)?
- If Alice and Bob edited different parts of the same documents, **which version is the "right" one**?
- (spoiler: none)

# **Medium Raw**: 
blocking network drives, specialized services like Google Docs & Co:
  - only works online -- no offline editing
  - only works for specific types of files
  - but: easy to use, mostly free

# **Versions control**
the holy grail of digital collaboration
- DIY: OurFlyer.v25.correction5.print.psd
 - double data, manual labor
- cvs, sv, git -> github.com
 - [fb](https://github.com/facebook/tornado)
 - [linux](https://github.com/torvalds/linux/blame/master/COPYING)
 - [M18WEB](http://m18.uni-weimar.de:1337/projects/m18webserver/repository/revisions/893057eedb2b0e592f774d901b24ec0d446e0d39/diff/php5/fpm/pool.d/bauhaus.conf)

 - works best with text (source code is text, too)
 - Good example: Wikipedia
  - http://de.wikipedia.org/w/index.php?title=Bauhaus-Universität_Weimar&diff=prev&oldid=76191148
 
# 3. Task management
- **"in "prose"** (prosa): ("alices does this, bob does that next week")
 - see "Communication"
- **programmatically** ("Bug#345 was assigned to Max")
 - Buzz words: bug tracker, tickets, issues
 - depending on your project the outside world may be part of it (costumers reporting errors/bugs)

## Systems: All-in-One bzw Enough-in-One
 - Google (simple, but evil)
 - [Basecamp](https://kkkiosk.basecamphq.com/projects/2790816-k3/posts) (beautiful, aber expensive)
  - of course there is more out there
 - Redmine (ugly, but free and open source)
  - also: Trac

---

# Tour to Redmine.org
- Overview: [Activity](http://www.redmine.org/projects/redmine/activity?show_issues=1&show_changesets=1&show_news=1&show_wiki_edits=1&show_messages=1)
- "Heart&Soul": [Issues](http://www.redmine.org/issues/9475)
- Das große Ganze: [Roadmap](http://www.redmine.org/projects/redmine/roadmap)
- Drüber reden: [Forums](http://www.redmine.org/boards/1/topics/1183)
- Dokumentieren: [Wiki](http://www.redmine.org/projects/redmine/wiki/RedmineWikis)
- Ankündigen: [News](http://www.redmine.org/projects/redmine/news)
- Produzieren: [Repository](http://www.redmine.org/projects/redmine/repository)

# Assignment
- analyse your own demand for an own project and devise a digital collaboration strategy
 - best: a current one and in groups

- What tools/functions do you need?
- Which services offer these tools and how?
- What is the "best tool for the job" (or the best tools…)

- Use what I've shown, but also similar services (surprise me)
- Many commercial services have some kind of free account which is enough for testing, but consider the long-term costs (is it worth it?)

# Testing Redmine
- is not mandatory, but free for all
 - [Register](http://inc.ars.is/account/register)
 - (wait for me to activate your account)
 - [make new project](http://inc.ars.is/projects/new?parent_id=digikollabo)
 - decide what "modules" to use -- you can change that later so you may just select all for a start
 - ![Bild](Screenshot)